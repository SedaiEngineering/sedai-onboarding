AWSTemplateFormatVersion: 2010-09-09
Description: CloudFormation template to provide permissions for Sedai
Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: "Sedai app configuration section"
        Parameters:
          - UniqueExternalId
      - Label:
          default: "Permission section"
        Parameters:
          - SedaiAccessMode
          - LambdaRequired
          - ECSRequired
          - DynamoDBRequired
          - EC2InstanceRequired
          - S3StorageRequired
          - EBSStorageRequired
          - RDSRequired

    ParameterLabels:
      UniqueExternalId:
        default: "Enter a unique external ID (leave blank for auto-generation)"
      SedaiAccessMode:
        default: "Choose access level for Sedai"
      LambdaRequired:
        default: "Enable Sedai Integration for Lambda Functions?"
      ECSRequired:
        default: "Enable Sedai Integration for ECS Clusters?"
      DynamoDBRequired:
        default: "Enable Sedai Integration for DynamoDB Tables?"
      EC2InstanceRequired:
        default: "Enable Sedai Integration for EC2 instances?"
      S3StorageRequired:
        default: "Enable Sedai Integration for S3 Buckets?"
      EBSStorageRequired:
        default: "Enable Sedai Integration for EBS Volumes?"
      RDSRequired:
        default: "Enable Sedai Integration for RDS Clusters?"

Parameters:
  UniqueExternalId:
    Type: String
    Description: "Leave this blank to auto-generate a unique ID like ext-{AWSAccountID} (recommended)."
  SedaiAccessMode:
    Type: String
    Description: "Choose access level. Select 'SedaiReadOnly' to let Sedai discover your AWS services, or 'SedaiReadWrite' to let Sedai discover or optimize them."
    Default: "SedaiReadOnly"
    AllowedValues:
      - "SedaiReadOnly"
      - "SedaiReadWrite"
  LambdaRequired:
    Type: String
    Description: "Select 'Yes' to allow Sedai to discover or optimize Lambda Functions. If 'SedaiAccessMode' is set to 'SedaiReadOnly', Sedai will only discover them."
    Default: "No"
    AllowedValues:
      - "Yes"
      - "No"
  ECSRequired:
    Type: String
    Description: "Select 'Yes' to allow Sedai to discover or optimize ECS Clusters. If 'SedaiAccessMode' is set to 'SedaiReadOnly', Sedai will only discover them."
    Default: "No"
    AllowedValues:
      - "Yes"
      - "No"
  DynamoDBRequired:
    Type: String
    Description: "Select 'Yes' to allow Sedai to discover or optimize DynamoDB Tables. If 'SedaiAccessMode' is set to 'SedaiReadOnly', Sedai will only discover them."
    Default: "No"
    AllowedValues:
      - "Yes"
      - "No"
  EC2InstanceRequired:
    Type: String
    Description: "Select 'Yes' to allow Sedai to discover or optimize EC2 Instances. If 'SedaiAccessMode' is set to 'SedaiReadOnly', Sedai will only discover them."
    Default: "No"
    AllowedValues:
      - "Yes"
      - "No"
  S3StorageRequired:
    Type: String
    Description: "Select 'Yes' to allow Sedai to discover or optimize S3 Buckets. If 'SedaiAccessMode' is set to 'SedaiReadOnly', Sedai will only discover them."
    Default: "No"
    AllowedValues:
      - "Yes"
      - "No"
  EBSStorageRequired:
    Type: String
    Description: "Select 'Yes' to allow Sedai to discover or optimize EBS Volumes. If 'SedaiAccessMode' is set to 'SedaiReadOnly', Sedai will only discover them."
    Default: "No"
    AllowedValues:
      - "Yes"
      - "No"
  RDSRequired:
    Type: String
    Description: "Select 'Yes' to allow Sedai to discover or optimize RDS Clusters. If 'SedaiAccessMode' is set to 'SedaiReadOnly', Sedai will only discover them."
    Default: "No"
    AllowedValues:
      - "Yes"
      - "No"

Mappings:
  PolicyReadOnlyMap:
    Common:
      SedaiReadOnly: "s3://sedai-onboarding-templates-prod/nested/sedai-integration-include-common-r.json"
      SedaiReadWrite: "s3://sedai-onboarding-templates-prod/nested/sedai-integration-include-common-rw.json"
    Lambda:
      SedaiReadOnly: "s3://sedai-onboarding-templates-prod/nested/sedai-integration-include-lambda-r.json"
      SedaiReadWrite: "s3://sedai-onboarding-templates-prod/nested/sedai-integration-include-lambda-rw.json"
    ECS:
      SedaiReadOnly: "s3://sedai-onboarding-templates-prod/nested/sedai-integration-include-ecs-r.json"
      SedaiReadWrite: "s3://sedai-onboarding-templates-prod/nested/sedai-integration-include-ecs-rw.json"
    DynamoDB:
      SedaiReadOnly: "s3://sedai-onboarding-templates-prod/nested/sedai-integration-include-dynamodb-r.json"
      SedaiReadWrite: "s3://sedai-onboarding-templates-prod/nested/sedai-integration-include-dynamodb-rw.json"
    EC2Instance:
      SedaiReadOnly: "s3://sedai-onboarding-templates-prod/nested/sedai-integration-include-ec2instance-r.json"
      SedaiReadWrite: "s3://sedai-onboarding-templates-prod/nested/sedai-integration-include-ec2instance-rw.json"
    S3Storage:
      SedaiReadOnly: "s3://sedai-onboarding-templates-prod/nested/sedai-integration-include-storages3-r.json"
      SedaiReadWrite: "s3://sedai-onboarding-templates-prod/nested/sedai-integration-include-storages3-rw.json"
    EBSStorage:
      SedaiReadOnly: "s3://sedai-onboarding-templates-prod/nested/sedai-integration-include-storageebs-r.json"
      SedaiReadWrite: "s3://sedai-onboarding-templates-prod/nested/sedai-integration-include-storageebs-rw.json"
    RDS:
      SedaiReadOnly: "s3://sedai-onboarding-templates-prod/nested/sedai-integration-include-rds-r.json"
      SedaiReadWrite: "s3://sedai-onboarding-templates-prod/nested/sedai-integration-include-rds-rw.json"

Conditions:
  UniqueExternalIdPresent: !Not [!Equals [!Ref UniqueExternalId, ""]]
  IsReadOnly: !Equals [!Ref SedaiAccessMode, "SedaiReadOnly"]
  IsLambdaRequired: !Equals [!Ref LambdaRequired, "Yes"]
  IsECSRequired: !Equals [!Ref ECSRequired, "Yes"]
  IsDynamoDBRequired: !Equals [!Ref DynamoDBRequired, "Yes"]
  IsEC2InstanceRequired: !Equals [!Ref EC2InstanceRequired, "Yes"]
  IsS3StorageRequired: !Equals [!Ref S3StorageRequired, "Yes"]
  IsEBSStorageRequired: !Equals [!Ref EBSStorageRequired, "Yes"]
  IsRDSRequired: !Equals [!Ref RDSRequired, "Yes"]

Resources:
  SedaiIntegrationServiceRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: sedai-integration-service-role
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              AWS: "arn:aws:iam::504216784688:root"
            Action:
              - sts:AssumeRole
            Condition:
              StringEquals:
                sts:ExternalId: !If
                  - UniqueExternalIdPresent
                  - !Ref UniqueExternalId
                  - !Sub ext-${AWS::AccountId}
      Path: "/"

  SedaiIntegrationCommonPolicy:
    Type: AWS::CloudFormation::Stack
    Properties:
      Parameters:
        SedaiIntegrationServiceRole: !Ref SedaiIntegrationServiceRole
        PolicyIncludeLocation: !FindInMap [PolicyReadOnlyMap, Common, !Ref SedaiAccessMode]
        Service: common
        Permission: !If [IsReadOnly, read, write]
      TemplateURL: "https://sedai-onboarding-templates-prod.s3.amazonaws.com/nested/sedai-integration-nested-managedpolicy.yml"

  SedaiIntegrationLambdaPolicy:
    Type: AWS::CloudFormation::Stack
    Condition: IsLambdaRequired
    Properties:
      Parameters:
        SedaiIntegrationServiceRole: !Ref SedaiIntegrationServiceRole
        PolicyIncludeLocation: !FindInMap [PolicyReadOnlyMap, Lambda, !Ref SedaiAccessMode]
        Service: lambda
        Permission: !If [IsReadOnly, read, write]
      TemplateURL: "https://sedai-onboarding-templates-prod.s3.amazonaws.com/nested/sedai-integration-nested-managedpolicy.yml"

  SedaiIntegrationECSPolicy:
    Type: AWS::CloudFormation::Stack
    Condition: IsECSRequired
    Properties:
      Parameters:
        SedaiIntegrationServiceRole: !Ref SedaiIntegrationServiceRole
        PolicyIncludeLocation: !FindInMap [PolicyReadOnlyMap, ECS, !Ref SedaiAccessMode]
        Service: ecs
        Permission: !If [IsReadOnly, read, write]
      TemplateURL: "https://sedai-onboarding-templates-prod.s3.amazonaws.com/nested/sedai-integration-nested-managedpolicy.yml"

  SedaiIntegrationDynamoDBPolicy:
    Type: AWS::CloudFormation::Stack
    Condition: IsDynamoDBRequired
    Properties:
      Parameters:
        SedaiIntegrationServiceRole: !Ref SedaiIntegrationServiceRole
        PolicyIncludeLocation: !FindInMap [PolicyReadOnlyMap, DynamoDB, !Ref SedaiAccessMode]
        Service: dynamodb
        Permission: !If [IsReadOnly, read, write]
      TemplateURL: "https://sedai-onboarding-templates-prod.s3.amazonaws.com/nested/sedai-integration-nested-managedpolicy.yml"

  SedaiIntegrationEC2Policy:
    Type: AWS::CloudFormation::Stack
    Condition: IsEC2InstanceRequired
    Properties:
      Parameters:
        SedaiIntegrationServiceRole: !Ref SedaiIntegrationServiceRole
        PolicyIncludeLocation: !FindInMap [PolicyReadOnlyMap, EC2Instance, !Ref SedaiAccessMode]
        Service: ec2
        Permission: !If [IsReadOnly, read, write]
      TemplateURL: "https://sedai-onboarding-templates-prod.s3.amazonaws.com/nested/sedai-integration-nested-managedpolicy.yml"

  SedaiIntegrationS3Policy:
    Type: AWS::CloudFormation::Stack
    Condition: IsS3StorageRequired
    Properties:
      Parameters:
        SedaiIntegrationServiceRole: !Ref SedaiIntegrationServiceRole
        PolicyIncludeLocation: !FindInMap [PolicyReadOnlyMap, S3Storage, !Ref SedaiAccessMode]
        Service: s3
        Permission: !If [IsReadOnly, read, write]
      TemplateURL: "https://sedai-onboarding-templates-prod.s3.amazonaws.com/nested/sedai-integration-nested-managedpolicy.yml"

  SedaiIntegrationEBSPolicy:
    Type: AWS::CloudFormation::Stack
    Condition: IsEBSStorageRequired
    Properties:
      Parameters:
        SedaiIntegrationServiceRole: !Ref SedaiIntegrationServiceRole
        PolicyIncludeLocation: !FindInMap [PolicyReadOnlyMap, EBSStorage, !Ref SedaiAccessMode]
        Service: ebs
        Permission: !If [IsReadOnly, read, write]
      TemplateURL: "https://sedai-onboarding-templates-prod.s3.amazonaws.com/nested/sedai-integration-nested-managedpolicy.yml"

  SedaiIntegrationRDSPolicy:
    Type: AWS::CloudFormation::Stack
    Condition: IsRDSRequired
    Properties:
      Parameters:
        SedaiIntegrationServiceRole: !Ref SedaiIntegrationServiceRole
        PolicyIncludeLocation: !FindInMap [PolicyReadOnlyMap, RDS, !Ref SedaiAccessMode]
        Service: rds
        Permission: !If [IsReadOnly, read, write]
      TemplateURL: "https://sedai-onboarding-templates-prod.s3.amazonaws.com/nested/sedai-integration-nested-managedpolicy.yml"

Outputs:
  SedaiIntegrationServiceRole:
    Description: "IAM Role ARN that Sedai uses to discover or optimize AWS resources"
    Value: !GetAtt SedaiIntegrationServiceRole.Arn