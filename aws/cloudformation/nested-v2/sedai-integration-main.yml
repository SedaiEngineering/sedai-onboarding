AWSTemplateFormatVersion: 2010-09-09
Description: CloudFormation template to provide permission for Sedai
Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: "Sedai app configuration section"
        Parameters:
          - UniqueExternalId
      - Label:
          default: "Permission section"
        Parameters:
          - ReadOnly
          - LambdaRequired
          - ECSRequired
          - KubernetesRequired
          - EC2InstanceRequired
          - S3StorageRequired
          - EBSStorageRequired
          - RDSRequired
          
    ParameterLabels:
      UniqueExternalId:
        default: "Enter a unique external ID (leave blank for auto-generation)"
      ReadOnly:
        default: "Select 'Yes' to give Sedai read-only access to your account"
      LambdaRequired:
        default: "Allow Sedai permissions to access Lambda workloads?"
      ECSRequired:
        default: "Allow Sedai permissions to access ECS workloads?"
      KubernetesRequired:
        default: "Allow Sedai permissions to access Kubernetes workloads?"
      EC2InstanceRequired:
        default: "Allow Sedai permissions to access EC2 instance workloads?"
      S3StorageRequired:
        default: "Allow Sedai permissions to access S3 storage workloads?"
      EBSStorageRequired:
        default: "Allow Sedai permissions to access EBS storage volumes?"
      RDSRequired:
        default: "Allow Sedai permissions to access RDS workloads?"

Parameters:
  UniqueExternalId: 
    Type: String 
    Description: "Leave empty to auto-generate a unique external ID in the format ext-{AWSAccountID} (recommended)." 
    Default: !Sub "ext-${AWS::AccountId}"
  ReadOnly: 
    Type: String 
    Description: "Specify access level. Select 'Yes' for read-only access, or 'No' to select individual Sedai-supported workloads." 
    Default: "Yes" 
    AllowedValues: ["Yes", "No"]
  LambdaRequired: 
    Type: String 
    Description: "Select 'Yes' to allow Lambda resource access. If 'ReadOnly' is 'Yes', Sedai will not optimize Lambda workloads." 
    Default: "No" 
    AllowedValues: ["Yes", "No"]
  ECSRequired: 
    Type: String 
    Description: "Select 'Yes' to allow ECS resource access. If 'ReadOnly' is 'Yes', Sedai will not optimize ECS workloads." 
    Default: "No" 
    AllowedValues: ["Yes", "No"]
  KubernetesRequired: 
    Type: String 
    Description: "Select 'Yes' to allow Kubernetes resource access. If 'ReadOnly' is 'Yes', Sedai will not optimize EKS workloads." 
    Default: "No" 
    AllowedValues: ["Yes", "No"]
  EC2InstanceRequired: 
    Type: String 
    Description: "Select 'Yes' to allow EC2 instance access. If 'ReadOnly' is 'Yes', Sedai will not optimize EC2 workloads." 
    Default: "No" 
    AllowedValues: ["Yes", "No"]
  S3StorageRequired: 
    Type: String 
    Description: "Select 'Yes' to allow S3 storage access. If 'ReadOnly' is 'Yes', Sedai will not optimize S3 workloads." 
    Default: "No" 
    AllowedValues: ["Yes", "No"]
  EBSStorageRequired: 
    Type: String 
    Description: "Select 'Yes' to allow EBS storage access. If 'ReadOnly' is 'Yes', Sedai will not optimize EBS volumes." 
    Default: "No" 
    AllowedValues: ["Yes", "No"]
  RDSRequired: 
    Type: String 
    Description: "Select 'Yes' to allow RDS access. If 'ReadOnly' is 'Yes', Sedai will not optimize RDS clusters." 
    Default: "No" 
    AllowedValues: ["Yes", "No"]

Mappings:
  PolicyReadOnlyMap:
    Common:
      "Yes": "s3://sedai-onboarding-templates-prod/nested/sedai-integration-include-common-r.json"
      "No": "s3://sedai-onboarding-templates-prod/nested/sedai-integration-include-common-rw.json"
    Lambda:
      "Yes": "s3://sedai-onboarding-templates-prod/nested/sedai-integration-include-lambda-r.json"
      "No": "s3://sedai-onboarding-templates-prod/nested/sedai-integration-include-lambda-rw.json"
    ECS:
      "Yes": "s3://sedai-onboarding-templates-prod/nested/sedai-integration-include-ecs-r.json"
      "No": "s3://sedai-onboarding-templates-prod/nested/sedai-integration-include-ecs-rw.json"
    Kubernetes:
      "Yes": "s3://sedai-onboarding-templates-prod/nested/sedai-integration-include-kubernetes-r.json"
      "No": "s3://sedai-onboarding-templates-prod/nested/sedai-integration-include-kubernetes-rw.json"
    EC2Instance:
      "Yes": "s3://sedai-onboarding-templates-prod/nested/sedai-integration-include-ec2instance-r.json"
      "No": "s3://sedai-onboarding-templates-prod/nested/sedai-integration-include-ec2instance-rw.json"
    S3Storage:
      "Yes": "s3://sedai-onboarding-templates-prod/nested/sedai-integration-include-storages3-r.json"
      "No": "s3://sedai-onboarding-templates-prod/nested/sedai-integration-include-storages3-rw.json"
    EBSStorage:
      "Yes": "s3://sedai-onboarding-templates-prod/nested/sedai-integration-include-storageebs-r.json"
      "No": "s3://sedai-onboarding-templates-prod/nested/sedai-integration-include-storageebs-rw.json"
    RDS:
      "Yes": "s3://sedai-onboarding-templates-prod/nested/sedai-integration-include-rds-r.json"
      "No": "s3://sedai-onboarding-templates-prod/nested/sedai-integration-include-rds-rw.json"

Conditions:
  UniqueExternalIdPresent: !Not [!Equals [!Ref UniqueExternalId, ""]]
  IsReadOnly: !Equals [!Ref ReadOnly, "Yes"]
  IsLambdaRequired: !Equals [!Ref LambdaRequired, "Yes"]
  IsECSRequired: !Equals [!Ref ECSRequired, "Yes"]
  IsKubernetesRequired: !Equals [!Ref KubernetesRequired, "Yes"]
  IsEC2InstanceRequired: !Equals [!Ref EC2InstanceRequired, "Yes"]
  IsS3StorageRequired: !Equals [!Ref S3StorageRequired, "Yes"]
  IsEBSStorageRequired: !Equals [!Ref EBSStorageRequired, "Yes"]
  IsRDSRequired: !Equals [!Ref RDSRequired, "Yes"]

Resources:
  SedaiIntegrationServiceRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: sedai-integration-service-role
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              AWS:
                - 504216784688
            Action:
              - sts:AssumeRole
            Condition:
              StringEquals: !If
                - UniqueExternalIdPresent
                - sts:ExternalId: !Ref UniqueExternalId
                - sts:ExternalId: !Sub ext-${AWS::AccountId}
      Path: "/"

  SedaiIntegrationCommonPolicy:
    Type: AWS::CloudFormation::Stack
    Properties:
      Parameters:
        SedaiIntegrationServiceRole: !Ref SedaiIntegrationServiceRole
        PolicyIncludeLocation: !FindInMap [PolicyReadOnlyMap, Common, !Ref ReadOnly]
        Service: common
        Permission: !If [IsReadOnly, read, write]
      TemplateURL: "https://sedai-onboarding-templates-prod.s3.amazonaws.com/nested/sedai-integration-nested-inlinepolicy.yml"

  SedaiIntegrationLambdaPolicy:
    Type: AWS::CloudFormation::Stack
    Condition: IsLambdaRequired
    Properties:
      Parameters:
        SedaiIntegrationServiceRole: !Ref SedaiIntegrationServiceRole
        PolicyIncludeLocation: !FindInMap [PolicyReadOnlyMap, Lambda, !Ref ReadOnly]
        Service: lambda
        Permission: !If [IsReadOnly, read, write]
      TemplateURL: "https://sedai-onboarding-templates-prod.s3.amazonaws.com/nested/sedai-integration-nested-managedpolicy.yml"

  SedaiIntegrationECSPolicy:
    Type: AWS::CloudFormation::Stack
    Condition: IsECSRequired
    Properties:
      Parameters:
        SedaiIntegrationServiceRole: !Ref SedaiIntegrationServiceRole
        PolicyIncludeLocation: !FindInMap [PolicyReadOnlyMap, ECS, !Ref ReadOnly]
        Service: ecs
        Permission: !If [IsReadOnly, read, write]
      TemplateURL: "https://sedai-onboarding-templates-prod.s3.amazonaws.com/nested/sedai-integration-nested-managedpolicy.yml"

  SedaiIntegrationKubernetesPolicy:
    Type: AWS::CloudFormation::Stack
    Condition: IsKubernetesRequired
    Properties:
      Parameters:
        SedaiIntegrationServiceRole: !Ref SedaiIntegrationServiceRole
        PolicyIncludeLocation: !FindInMap [PolicyReadOnlyMap, Kubernetes, !Ref ReadOnly]
        Service: kubernetes
        Permission: !If [IsReadOnly, read, write]
      TemplateURL: "https://sedai-onboarding-templates-prod.s3.amazonaws.com/nested/sedai-integration-nested-managedpolicy.yml"

  SedaiIntegrationEC2Policy:
    Type: AWS::CloudFormation::Stack
    Condition: IsEC2InstanceRequired
    Properties:
      Parameters:
        SedaiIntegrationServiceRole: !Ref SedaiIntegrationServiceRole
        PolicyIncludeLocation: !FindInMap [PolicyReadOnlyMap, EC2Instance, !Ref ReadOnly]
        Service: ec2
        Permission: !If [IsReadOnly, read, write]
      TemplateURL: "https://sedai-onboarding-templates-prod.s3.amazonaws.com/nested/sedai-integration-nested-managedpolicy.yml"

  SedaiIntegrationS3Policy:
    Type: AWS::CloudFormation::Stack
    Condition: IsS3StorageRequired
    Properties:
      Parameters:
        SedaiIntegrationServiceRole: !Ref SedaiIntegrationServiceRole
        PolicyIncludeLocation: !FindInMap [PolicyReadOnlyMap, S3Storage, !Ref ReadOnly]
        Service: s3
        Permission: !If [IsReadOnly, read, write]
      TemplateURL: "https://sedai-onboarding-templates-prod.s3.amazonaws.com/nested/sedai-integration-nested-managedpolicy.yml"

  SedaiIntegrationEBSPolicy:
    Type: AWS::CloudFormation::Stack
    Condition: IsEBSStorageRequired
    Properties:
      Parameters:
        SedaiIntegrationServiceRole: !Ref SedaiIntegrationServiceRole
        PolicyIncludeLocation: !FindInMap [PolicyReadOnlyMap, EBSStorage, !Ref ReadOnly]
        Service: ebs
        Permission: !If [IsReadOnly, read, write]
      TemplateURL: "https://sedai-onboarding-templates-prod.s3.amazonaws.com/nested/sedai-integration-nested-managedpolicy.yml"

  SedaiIntegrationRDSPolicy:
    Type: AWS::CloudFormation::Stack
    Condition: IsRDSRequired
    Properties:
      Parameters:
        SedaiIntegrationServiceRole: !Ref SedaiIntegrationServiceRole
        PolicyIncludeLocation: !FindInMap [PolicyReadOnlyMap, RDS, !Ref ReadOnly]
        Service: rds
        Permission: !If [IsReadOnly, read, write]
      TemplateURL: "https://sedai-onboarding-templates-prod.s3.amazonaws.com/nested/sedai-integration-nested-managedpolicy.yml"