{
    "Version": "2012-10-17",
    "Statement": [
        {
            "Sid": "ecsreadecs",
            "Effect": "Allow",
            "Action": [
                "ecs:Describe*",
                "ecs:List*",
                "ecs:DiscoverPollEndpoint"
            ],
            "Resource": "*"
        },
        {
            "Sid": "ecsreadelasticloadbalancing",
            "Effect": "Allow",
            "Action": [
                "elasticloadbalancing:Describe*"
            ],
            "Resource": "*"
        },
        {
            "Sid": "ecsreadservicediscovery",
            "Effect": "Allow",
            "Action": [
                "servicediscovery:Get*",
                "servicediscovery:List*"
            ],
            "Resource": "*"
        },
        {
            "Sid": "ecsreadapigateway",
            "Effect": "Allow",
            "Action": [
                "apigateway:GET"
            ],
            "Resource": "*"
        },
        {
            "Sid": "ecsreadautoscaling",
            "Effect": "Allow",
            "Action": [
                "autoscaling:Describe*"
            ],
            "Resource": "*"
        },
        {
            "Sid": "ecsreadapplicationautoscaling",
            "Effect": "Allow",
            "Action": [
                "application-autoscaling:Describe*"
            ],
            "Resource": "*"
        },
        {
            "Sid": "ecsreadappmesh",
            "Effect": "Allow",
            "Action": [
                "appmesh:List*",
                "appmesh:Describe*"
            ],
            "Resource": "*"
        },
        {
            "Sid": "ecswriteiampassrole",
            "Effect": "Allow",
            "Action": [
                "iam:PassRole"
            ],
            "Resource": "*",
            "Condition": {
                "StringLike": {
                    "iam:PassedToService": [
                        "ec2.amazonaws.com",
                        "ecs-tasks.amazonaws.com",
                        "application-autoscaling.amazonaws.com",
                        "elasticloadbalancing.amazonaws.com",
                        "autoscaling.amazonaws.com"
                    ]
                }
            }
        },
        {
            "Sid": "ecswriteiamcreaterole",
            "Effect": "Allow",
            "Action": [
                "iam:CreateServiceLinkedRole"
            ],
            "Resource": "*",
            "Condition": {
                "StringLike": {
                    "iam:AWSServiceName": [
                        "autoscaling.amazonaws.com",
                        "ecs.amazonaws.com",
                        "ecs.application-autoscaling.amazonaws.com",
                        "spot.amazonaws.com",
                        "spotfleet.amazonaws.com"
                    ]
                }
            }
        },
        {
            "Sid": "ecswriteecs",
            "Effect": "Allow",
            "Action": [
                "ecs:CreateCapacityProvider",
                "ecs:CreateService",
                "ecs:CreateTaskSet",
                "ecs:DeleteCapacityProvider",
                "ecs:Deregister*",
                "ecs:ExecuteCommand",
                "ecs:Poll",
                "ecs:Put*",
                "ecs:Register*",
                "ecs:RunTask",
                "ecs:Start*",
                "ecs:StopTask",
                "ecs:Submit*",
                "ecs:TagResource",
                "ecs:UntagResource",
                "ecs:Update*"
            ],
            "Resource": "*"
        },
        {
            "Sid": "ecswriteservicediscovery",
            "Effect": "Allow",
            "Action": [
                "servicediscovery:CreatePrivateDnsNamespace",
                "servicediscovery:CreateService",
                "servicediscovery:UpdateService"
            ],
            "Resource": "*"
        },
        {
            "Sid": "ecswriteelasticloadbalancing",
            "Effect": "Allow",
            "Action": [
                "elasticloadbalancing:CreateRule",
                "elasticloadbalancing:CreateTargetGroup",
                "elasticloadbalancing:DeregisterInstancesFromLoadBalancer",
                "elasticloadbalancing:RegisterInstancesWithLoadBalancer",
                "elasticloadbalancing:DeregisterTargets",
                "elasticloadbalancing:RegisterTargets",
                "elasticloadbalancing:AddTags"
            ],
            "Resource": "*"
        },
        {
            "Sid": "ecswriteautoscaling",
            "Effect": "Allow",
            "Action": [
                "autoscaling:CreateAutoScalingGroup",
                "autoscaling:CreateLaunchConfiguration",
                "autoscaling:UpdateAutoScalingGroup",
                "autoscaling:DeleteLaunchConfiguration",
                "autoscaling:DeleteAutoScalingGroup",
                "autoscaling:TerminateInstanceInAutoScalingGroup",
                "autoscaling:PutScalingPolicy"
            ],
            "Resource": "*"
        },
        {
            "Sid": "ecswriteapplicationautoscaling",
            "Effect": "Allow",
            "Action": [
                "application-autoscaling:DeleteScalingPolicy",
                "application-autoscaling:DeregisterScalableTarget",
                "application-autoscaling:PutScalingPolicy",
                "application-autoscaling:RegisterScalableTarget"
            ],
            "Resource": "*"
        },
        {
            "Sid": "ec2instancereadec2",
            "Effect": "Allow",
            "Action": [
                "ec2:Describe*",
                "ec2:Search*",
                "ec2:Get*"
            ],
            "Resource": "*"
        },
        {
            "Sid": "ec2instancedeny",
            "Effect": "Deny",
            "Action": [
                "ec2:DescribeVpnConnections",
                "ec2:DescribeClientVpn*",
                "ec2:DescribeAddressTransfers",
                "ec2:DescribeCarrierGateways",
                "ec2:DescribeClientVpn*",
                "ec2:DescribeCoipPools",
                "ec2:DescribeCustomerGateways",
                "ec2:DescribeFlowLogs",
                "ec2:DescribeIpamByoasn",
                "ec2:DescribeIpam*",
                "ec2:DescribeLocalGateway*",
                "ec2:DescribeManagedPrefixLists",
                "ec2:DescribeTrafficMirror*",
                "ec2:DescribeTransitGateway*",
                "ec2:DescribeTrunkInterfaceAssociations",
                "ec2:DescribeVerifiedAccess*",
                "ec2:DescribeVpcEndpoint*",
                "ec2:DescribeVpcPeeringConnections",
                "ec2:DescribeVpnGateways"
            ]
        }
    ]
}